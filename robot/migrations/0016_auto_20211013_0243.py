# Generated by Django 3.2.7 on 2021-10-13 02:43

import django.contrib.postgres.fields.ranges
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('robot', '0015_auto_20211012_1029'),
    ]

    operations = [
        migrations.CreateModel(
            name='EqModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='名字')),
                ('description', models.CharField(max_length=255, verbose_name='描述')),
                ('attack', django.contrib.postgres.fields.ranges.IntegerRangeField(verbose_name='攻击力加成')),
                ('defense', django.contrib.postgres.fields.ranges.IntegerRangeField(verbose_name='防御力加成')),
                ('health_point', django.contrib.postgres.fields.ranges.IntegerRangeField(verbose_name='生命值加成')),
            ],
            options={
                'verbose_name': '装备',
                'verbose_name_plural': '装备',
            },
        ),
        migrations.CreateModel(
            name='EqType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='名称')),
            ],
            options={
                'verbose_name': '装备类型',
                'verbose_name_plural': '装备类型',
            },
        ),
        migrations.CreateModel(
            name='MapModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='名字')),
                ('consume_gem', models.IntegerField(verbose_name='消耗灵石')),
            ],
            options={
                'verbose_name': '地图',
                'verbose_name_plural': '地图',
            },
        ),
        migrations.CreateModel(
            name='MonsterConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='名字')),
                ('health_point', django.contrib.postgres.fields.ranges.IntegerRangeField(verbose_name='血量范围')),
                ('attack', django.contrib.postgres.fields.ranges.IntegerRangeField(verbose_name='攻击力范围')),
                ('defense', django.contrib.postgres.fields.ranges.IntegerRangeField(verbose_name='防御力范围')),
                ('award_gem', django.contrib.postgres.fields.ranges.IntegerRangeField(verbose_name='灵石奖励')),
                ('award_eq', models.ManyToManyField(to='robot.EqModel', verbose_name='可能掉落的装备')),
            ],
            options={
                'verbose_name': '怪物',
                'verbose_name_plural': '怪物',
            },
        ),
        migrations.CreateModel(
            name='MapMonster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', django.contrib.postgres.fields.ranges.IntegerRangeField(default=(1, 10), verbose_name='存在怪物的数量')),
                ('status', models.BooleanField(default=True, verbose_name='是否有效配置')),
                ('map_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='robot.mapmodel', verbose_name='地图')),
                ('monster_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='robot.monsterconfig', verbose_name='怪物')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='eqmodel',
            name='eq_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eq_type_name', to='robot.eqtype', verbose_name='装备类型'),
        ),
    ]
